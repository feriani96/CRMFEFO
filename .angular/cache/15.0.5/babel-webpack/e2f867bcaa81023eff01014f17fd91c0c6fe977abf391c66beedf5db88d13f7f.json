{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(authService, formBuilder) {\n    this.authService = authService;\n    this.formBuilder = formBuilder;\n    this.form = {\n      username: null,\n      email: null,\n      password: null\n    };\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const {\n      username,\n      email,\n      password\n    } = this.form;\n    this.authService.register(username, email, password).subscribe({\n      next: data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 27,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"mb-3\"], [\"for\", \"txtName\", 1, \"form-label\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Enter client name...\", 1, \"form-control\"], [\"for\", \"txtPhone\", 1, \"form-label\"], [\"formControlName\", \"phone\", \"type\", \"number\", \"placeholder\", \"Enter client phone...\", 1, \"input\", \"form-control\"], [\"for\", \"txtAddress\", 1, \"form-label\"], [\"formControlName\", \"address\", \"type\", \"text\", \"placeholder\", \"Enter client address...\", 1, \"form-control\"], [\"for\", \"txtEmail\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"text\", \"placeholder\", \"Enter client email...\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mx-1\"], [\"type\", \"button\", \"routerLink\", \"/register\", 1, \"btn\", \"btn-danger\", \"mx-1\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"legend\");\n      i0.ɵɵtext(4, \"Create Client\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\")(6, \"div\", 1)(7, \"label\", 2);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 4);\n      i0.ɵɵtext(12, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 1)(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 8);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\")(23, \"button\", 10);\n      i0.ɵɵtext(24, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 11);\n      i0.ɵɵtext(26, \"signup\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;AAQxD,OAAM,MAAOC,cAAc;EAY3BC,YAAoBC,WAAwB,EAASC,WAAwB;IAAzD,gBAAW,GAAXD,WAAW;IAAsB,gBAAW,GAAXC,WAAW;IAV9D,SAAI,GAAK;MACPC,QAAQ,EAAC,IAAI;MACbC,KAAK,EAAC,IAAI;MACVC,QAAQ,EAAC;KACZ;IAED,iBAAY,GAAG,KAAK;IACpB,mBAAc,GAAG,KAAK;IACtB,iBAAY,GAAG,EAAE;EAEgE;EAE/EC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACjCL,QAAQ,EAAE,CAAC,EAAE,EAACL,UAAU,CAACW,QAAQ,CAAC;MAClCL,KAAK,EAAE,CAAC,EAAE,EAACN,UAAU,CAACW,QAAQ,CAAC;MAC/BJ,QAAQ,EAAE,CAAC,EAAE,EAACP,UAAU,CAACW,QAAQ;KAElC,CAAC;EACJ;EAEAC,QAAQ;IACN,MAAM;MAAEP,QAAQ;MAAEC,KAAK;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACE,IAAI;IAE/C,IAAI,CAACN,WAAW,CAACU,QAAQ,CAACR,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,CAAC,CAACO,SAAS,CAAC;MAC7DC,IAAI,EAAGC,IAAS,IAAI;QAClBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI,CAACG,YAAY,GAAG,IAAI;QACxB,IAAI,CAACC,cAAc,GAAG,KAAK;MAC7B,CAAC;MACDC,KAAK,EAAGC,GAAkC,IAAI;QAC5C,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACD,KAAK,CAACG,OAAO;QACrC,IAAI,CAACJ,cAAc,GAAG,IAAI;MAC5B;KACD,CAAC;EACJ;;AArCWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI;MACnBA,8BAAuB;MACXA,6BAAa;MAAAA,iBAAS;MAC9BA,4BAAM;MAIsCA,oBAAI;MAAAA,iBAAQ;MACpDA,2BAAoG;MACtGA,iBAAM;MAENA,+BAAkB;MACyBA,sBAAK;MAAAA,iBAAQ;MACtDA,4BAA4G;MAC9GA,iBAAM;MAENA,+BAAkB;MAC2BA,wBAAO;MAAAA,iBAAQ;MAC1DA,4BAC0C;MAC5CA,iBAAM;MAENA,+BAAkB;MACyBA,sBAAK;MAAAA,iBAAQ;MACtDA,4BAAsG;MACxGA,iBAAM;MAERA,4BAAK;MACgEA,qBAAI;MAAAA,iBAAS;MAChFA,mCAA0F;MAAAA,uBAAM;MAAAA,iBAAS","names":["Validators","LoginComponent","constructor","authService","formBuilder","username","email","password","ngOnInit","form","group","required","onSubmit","register","subscribe","next","data","console","log","isSuccessful","isSignUpFailed","error","err","errorMessage","message","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/auth/login/login.component.ts","/home/hp/Desktop/crm project/CRMFEFO/src/app/auth/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  \n  form:any={\n    username:null,\n    email:null,\n    password:null\n};\n  \nisSuccessful = false;\nisSignUpFailed = false;\nerrorMessage = '';\n\nconstructor(private authService: AuthService,private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      username: ['',Validators.required],\n      email: ['',Validators.required],\n      password: ['',Validators.required],\n\n    });\n  }\n\n  onSubmit(): void {\n    const { username, email, password } = this.form;\n\n    this.authService.register(username, email, password).subscribe({\n      next: (data: any) => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      error: (err: { error: { message: any; }; }) => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    });\n  }\n\n\n}\n","<p>login works!</p>\n<div class=\"container\">\n    <legend>Create Client</legend>\n    <form>\n  \n  \n      <div class=\"mb-3\">\n        <label for=\"txtName\" class=\"form-label\">Name</label>\n        <input class=\"form-control\" formControlName=\"name\" type=\"text\" placeholder=\"Enter client name...\" />\n      </div>\n  \n      <div class=\"mb-3\">\n        <label for=\"txtPhone\" class=\"form-label\">Phone</label>\n        <input class=\"input form-control\" formControlName=\"phone\" type=\"number\" placeholder=\"Enter client phone...\">\n      </div>\n  \n      <div class=\"mb-3\">\n        <label for=\"txtAddress\" class=\"form-label\">Address</label>\n        <input class=\"form-control\" formControlName=\"address\" type=\"text\"\n          placeholder=\"Enter client address...\" />\n      </div>\n  \n      <div class=\"mb-3\">\n        <label for=\"txtEmail\" class=\"form-label\">Email</label>\n        <input class=\"form-control\" formControlName=\"email\" type=\"text\" placeholder=\"Enter client email...\" />\n      </div>\n  \n    <div>\n      <button class=\"button\" type=\"button\"  class=\"btn btn-primary mx-1\">Save</button>\n      <button class=\"button\" type=\"button\"  routerLink=\"/register\" class=\"btn btn-danger mx-1\" >signup</button>\n    </div>\n      \n    </form>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}