{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  get() {\n    return this.http.get('http://localhost:8080/api/products');\n  }\n  create(payload) {\n    return this.http.post('http://localhost:8080/api/products', payload);\n  }\n  getById(id) {\n    return this.http.get(`http://localhost:8080/api/products/${id}`);\n  }\n  update(payload) {\n    return this.http.put(`http://localhost:8080/api/products/${payload.id}`, payload);\n  }\n  delete(id) {\n    return this.http.delete(`http://localhost:8080/api/products/${id}`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAGxCC,GAAG;IACD,OAAO,IAAI,CAACD,IAAI,CAACC,GAAG,CAAY,oCAAoC,CAAC;EACvE;EAGAC,MAAM,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAU,oCAAoC,EAAED,OAAO,CAAC;EAC/E;EAGAE,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACN,IAAI,CAACC,GAAG,CAAU,sCAAsCK,EAAE,EAAE,CAAC;EAC3E;EAIAC,MAAM,CAACJ,OAAe;IACpB,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAC,sCAAsCL,OAAO,CAACG,EAAE,EAAE,EAACH,OAAO,CAAC;EACjF;EAIDM,MAAM,CAACH,EAAU;IACf,OAAO,IAAI,CAACN,IAAI,CAACS,MAAM,CAAU,sCAAsCH,EAAE,EAAE,CAAC;EAC9E;;AA9BWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAY,SAAdZ,cAAc;EAAAa,YAFb;AAAM","names":["ProductService","constructor","http","get","create","payload","post","getById","id","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/service/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product} from '../models/Product';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n\n  constructor(private http: HttpClient) { }\n\n\n  get() {\n    return this.http.get<Product[]>('http://localhost:8080/api/products');\n  }\n\n\n  create(payload: Product) {\n    return this.http.post<Product>('http://localhost:8080/api/products', payload);\n  }\n\n  \n  getById(id: string) {\n    return this.http.get<Product>(`http://localhost:8080/api/products/${id}`);\n  }\n\n\n \n  update(payload:Product){\n    return this.http.put(`http://localhost:8080/api/products/${payload.id}`,payload);\n   }\n\n\n\n  delete(id: string) {\n    return this.http.delete<Product>(`http://localhost:8080/api/products/${id}`);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}