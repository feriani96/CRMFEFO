{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/client.service\";\nexport class HomeComponent {\n  constructor(clientService) {\n    this.clientService = clientService;\n    this.clients = [];\n    this.clientsDto = [];\n    this.idTodelete = '';\n  }\n  ngOnInit() {\n    this.deleteModal = new window.bootstrap.Modal(document.getElementById('deleteModal'));\n    this.clientService.get().subscribe(data => {\n      this.clients = data;\n      this.clientsDto = this.inintProductDto(this.clients);\n      console.log(this.clients);\n    });\n    this.get();\n  }\n  get() {\n    this.clientService.get().subscribe(data => {\n      this.clients = data;\n    });\n  }\n  inintProductDto(clients) {\n    let tempClientDto = [];\n    clients.forEach(client => {\n      const restDto = {\n        id: client.id,\n        name: client.name,\n        phone: client.phone,\n        address: client.address,\n        email: client.email\n      };\n      tempClientDto.push(restDto);\n    });\n    return tempClientDto;\n  }\n  openDeleteModal(id) {\n    this.idTodelete = id;\n    this.deleteModal.show();\n  }\n  /************JN:FIXING DELETE PROBLEM*********************/\n  delete() {\n    this.clientService.delete(this.idTodelete).subscribe({\n      next: data => {\n        this.clients = this.clients.filter(_ => _.id != this.idTodelete);\n        this.clientsDto = this.inintProductDto(this.clients);\n        this.deleteModal.hide();\n      }\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.ClientService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 2,\n  vars: 0,\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"home works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,aAAa;EAQxBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAPjC,YAAO,GAAa,EAAE;IACtB,eAAU,GAAgB,EAAE;IAG5B,eAAU,GAAW,EAAE;EAG6B;EAEpDC,QAAQ;IAEN,IAAI,CAACC,WAAW,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,KAAK,CAC3CC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CACvC;IAID,IAAI,CAACP,aAAa,CAACQ,GAAG,EAAE,CAACC,SAAS,CAAEC,IAAiB,IAAI;MACvD,IAAI,CAACC,OAAO,GAAGD,IAAI;MACnB,IAAI,CAACE,UAAU,GAAG,IAAI,CAACC,eAAe,CAAC,IAAI,CAACF,OAAO,CAAC;MACpDG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,OAAO,CAAC;IAC3B,CAAC,CAAC;IAGF,IAAI,CAACH,GAAG,EAAE;EAGZ;EAIAA,GAAG;IACD,IAAI,CAACR,aAAa,CAACQ,GAAG,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC1C,IAAI,CAACC,OAAO,GAAGD,IAAI;IAErB,CAAC,CAAC;EACJ;EAGAG,eAAe,CAACF,OAAiB;IAE/B,IAAIK,aAAa,GAAgB,EAAE;IAEnCL,OAAO,CAACM,OAAO,CAAEC,MAAM,IAAI;MAEzB,MAAMC,OAAO,GAAc;QACzBC,EAAE,EAAEF,MAAM,CAACE,EAAE;QACbC,IAAI,EAAEH,MAAM,CAACG,IAAI;QACjBC,KAAK,EAAEJ,MAAM,CAACI,KAAK;QACnBC,OAAO,EAAEL,MAAM,CAACK,OAAO;QACvBC,KAAK,EAAEN,MAAM,CAACM;OAEf;MAEDR,aAAa,CAACS,IAAI,CAACN,OAAO,CAAC;IAE7B,CAAC,CAAC;IAEF,OAAOH,aAAa;EACtB;EAKAU,eAAe,CAACN,EAAU;IACxB,IAAI,CAACO,UAAU,GAAGP,EAAE;IACpB,IAAI,CAAClB,WAAW,CAAC0B,IAAI,EAAE;EACzB;EAGF;EACEC,MAAM;IACJ,IAAI,CAAC7B,aAAa,CAAC6B,MAAM,CAAC,IAAI,CAACF,UAAU,CAAC,CAAClB,SAAS,CAAC;MACnDqB,IAAI,EAAGpB,IAAS,IAAI;QAClB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACoB,MAAM,CAACC,CAAC,IAAGA,CAAC,CAACZ,EAAE,IAAK,IAAI,CAACO,UAAU,CAAC;QAChE,IAAI,CAACf,UAAU,GAAG,IAAI,CAACC,eAAe,CAAC,IAAI,CAACF,OAAO,CAAC;QACpD,IAAI,CAACT,WAAW,CAAC+B,IAAI,EAAE;MACzB;KACD,CAAC;EACJ;;AAhFWnC,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,yBAAG;MAAAA,2BAAW;MAAAA,iBAAI","names":["HomeComponent","constructor","clientService","ngOnInit","deleteModal","window","bootstrap","Modal","document","getElementById","get","subscribe","data","clients","clientsDto","inintProductDto","console","log","tempClientDto","forEach","client","restDto","id","name","phone","address","email","push","openDeleteModal","idTodelete","show","delete","next","filter","_","hide","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/client/home/home.component.ts","/home/hp/Desktop/crm project/CRMFEFO/src/app/client/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Client, ClientDto } from 'src/app/models/Client';\nimport { ClientService } from 'src/app/service/client.service';\n\ndeclare var window: any;\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit{\n  clients: Client[] = [];\n  clientsDto: ClientDto[] = [];\n\n  deleteModal: any;\n  idTodelete: string = '';\n\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit(): void {\n\n    this.deleteModal = new window.bootstrap.Modal(\n      document.getElementById('deleteModal')\n    );\n\n\n    \n    this.clientService.get().subscribe((data: ClientDto[]) => {\n      this.clients = data;\n      this.clientsDto = this.inintProductDto(this.clients);\n      console.log(this.clients);\n    });\n\n\n    this.get();\n\n\n  }\n\n\n\n  get() {\n    this.clientService.get().subscribe((data) => {\n      this.clients = data;\n\n    });\n  }\n\n\n  inintProductDto(clients: Client[]): ClientDto[] {\n    \n    let tempClientDto: ClientDto[] = [];\n\n    clients.forEach((client) => {\n\n      const restDto: ClientDto = {\n        id: client.id,\n        name: client.name,\n        phone: client.phone,\n        address: client.address,\n        email: client.email,\n       \n      };\n\n      tempClientDto.push(restDto);\n\n    });\n\n    return tempClientDto;\n  }\n\n \n\n\n  openDeleteModal(id: string) {\n    this.idTodelete = id;\n    this.deleteModal.show();\n  }\n\n\n/************JN:FIXING DELETE PROBLEM*********************/\n  delete() {\n    this.clientService.delete(this.idTodelete).subscribe({\n      next: (data: any) => {\n        this.clients = this.clients.filter(_ =>_.id !=  this.idTodelete);\n        this.clientsDto = this.inintProductDto(this.clients);\n        this.deleteModal.hide();\n      }\n    });\n  }\n\n\n\n}\n","<p>home works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}