{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/client.service\";\nimport * as i3 from \"@angular/router\";\nexport class CreateComponent {\n  constructor(_formBuilder, clientService, router) {\n    this._formBuilder = _formBuilder;\n    this.clientService = clientService;\n    this.router = router;\n    this.clientForm = this._formBuilder.group({\n      name: '',\n      phone: 0,\n      address: '',\n      email: ''\n    });\n  }\n  ngOnInit() {}\n  submit() {\n    this.clientService.create(this.clientForm.value).subscribe({\n      next: data => {\n        this.router.navigate([\"/client/home\"]);\n        console.log(\"success .....\");\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClientService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 25,\n  vars: 1,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"txtName\", 1, \"form-label\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Enter client name...\", 1, \"form-control\"], [\"for\", \"txtPhone\", 1, \"form-label\"], [\"formControlName\", \"phone\", \"type\", \"number\", \"placeholder\", \"Enter client phone...\", 1, \"input\", \"form-control\"], [\"for\", \"txtAddress\", 1, \"form-label\"], [\"formControlName\", \"address\", \"type\", \"text\", \"placeholder\", \"Enter client address...\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mx-1\", 3, \"click\"], [\"type\", \"button\", \"routerLink\", \"/client/home\", 1, \"btn\", \"btn-danger\", \"mx-1\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"legend\");\n      i0.ɵɵtext(2, \"Create Client\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 3);\n      i0.ɵɵtext(18, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\")(21, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function CreateComponent_Template_button_click_21_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtext(22, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 10);\n      i0.ɵɵtext(24, \"Back\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.clientForm);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,eAAe;EAI1BC,YACUC,YAAyB,EACzBC,aAA4B,EAC5BC,MAAc;IAFd,iBAAY,GAAZF,YAAY;IACZ,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,YAAY,CAACI,KAAK,CAAC;MACxCC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAC,EAAE;MACVC,KAAK,EAAE;KAER,CAAC;EAEJ;EAEAC,QAAQ,IAAK;EAEbC,MAAM;IAGJ,IAAI,CAACT,aAAa,CAACU,MAAM,CAAC,IAAI,CAACR,UAAU,CAACS,KAAK,CAAC,CAC7CC,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;QACtCC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB;KACD,CAAC;EACN;;AAlCWtB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BC,8BAAuB;MACXA,6BAAa;MAAAA,iBAAS;MAC9BA,+BAA+B;MAIaA,oBAAI;MAAAA,iBAAQ;MACpDA,2BAAoG;MACtGA,iBAAM;MAENA,8BAAkB;MACyBA,sBAAK;MAAAA,iBAAQ;MACtDA,4BAA4G;MAC9GA,iBAAM;MAENA,+BAAkB;MAC2BA,wBAAO;MAAAA,iBAAQ;MAC1DA,4BAC0C;MAC5CA,iBAAM;MAENA,+BAAkB;MACwBA,qBAAI;MAAAA,iBAAQ;MACpDA,4BAAoG;MACtGA,iBAAM;MAERA,4BAAK;MACkCA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAA8BD,qBAAI;MAAAA,iBAAS;MAClGA,mCAA6F;MAAAA,qBAAI;MAAAA,iBAAS;;;MA1BtGA,eAAwB;MAAxBA,0CAAwB","names":["CreateComponent","constructor","_formBuilder","clientService","router","clientForm","group","name","phone","address","email","ngOnInit","submit","create","value","subscribe","next","data","navigate","console","log","error","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/client/create/create.component.ts","/home/hp/Desktop/crm project/CRMFEFO/src/app/client/create/create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ClientService } from 'src/app/service/client.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\n\nexport class CreateComponent implements OnInit {\n\n  clientForm!: FormGroup;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private clientService: ClientService,\n    private router: Router) {\n\n    this.clientForm = this._formBuilder.group({\n      name: '',\n      phone: 0,\n      address:'',\n      email: '',\n   \n    });\n\n  }\n\n  ngOnInit() { }\n\n  submit() {\n\n\n    this.clientService.create(this.clientForm.value)\n      .subscribe({\n        next: (data) => {\n          this.router.navigate([\"/client/home\"])\n          console.log(\"success .....\");\n        },\n        error: (err) => {\n          console.log(err);\n        }\n      })\n  }\n\n\n\n\n}\n","<div class=\"container\">\n    <legend>Create Client</legend>\n    <form [formGroup]=\"clientForm\">\n  \n  \n      <div class=\"mb-3\">\n        <label for=\"txtName\" class=\"form-label\">Name</label>\n        <input class=\"form-control\" formControlName=\"name\" type=\"text\" placeholder=\"Enter client name...\" />\n      </div>\n  \n      <div class=\"mb-3\">\n        <label for=\"txtPhone\" class=\"form-label\">Phone</label>\n        <input class=\"input form-control\" formControlName=\"phone\" type=\"number\" placeholder=\"Enter client phone...\">\n      </div>\n  \n      <div class=\"mb-3\">\n        <label for=\"txtAddress\" class=\"form-label\">Address</label>\n        <input class=\"form-control\" formControlName=\"address\" type=\"text\"\n          placeholder=\"Enter client address...\" />\n      </div>\n  \n      <div class=\"mb-3\">\n        <label for=\"txtName\" class=\"form-label\">Name</label>\n        <input class=\"form-control\" formControlName=\"name\" type=\"text\" placeholder=\"Enter client name...\" />\n      </div>\n  \n    <div>\n      <button class=\"button\" type=\"button\" (click)=\"submit()\" class=\"btn btn-primary mx-1\">Save</button>\n      <button class=\"button\" type=\"button\"  routerLink=\"/client/home\" class=\"btn btn-danger mx-1\" >Back</button>\n    </div>\n      \n    </form>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}