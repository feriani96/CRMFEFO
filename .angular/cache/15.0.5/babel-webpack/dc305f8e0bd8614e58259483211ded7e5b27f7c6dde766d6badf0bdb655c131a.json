{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditComponent = class EditComponent {\n  constructor(dataUtils, eventManager, fb, route, router, elementRef, productService) {\n    this.dataUtils = dataUtils;\n    this.eventManager = eventManager;\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.elementRef = elementRef;\n    this.productService = productService;\n    this.productForm = {\n      id: '',\n      name: '',\n      price: 0,\n      photo: null,\n      photoContentType: '',\n      description: '',\n      tax: 0\n    };\n    this.formGroup = this.fb.group({\n      id: '',\n      name: '',\n      price: 0,\n      photo: null,\n      photoContentType: null,\n      description: '',\n      tax: 17\n    });\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(param => {\n      var id = String(param.get('id'));\n      this.getById(id);\n    });\n  }\n  getById(id) {\n    this.productService.getById(id).subscribe(data => {\n      this.productForm = data;\n      console.log(\"this.productForm\", this.productForm);\n      this.formGroup.patchValue({\n        id: this.productForm.id,\n        name: this.productForm.name,\n        price: this.productForm.price,\n        photo: this.getPhoto(this.productForm.photo),\n        description: this.productForm.description,\n        tax: this.productForm.tax\n      });\n    });\n  }\n  update() {\n    this.productService.update(this.formGroup.value).subscribe({\n      next: data => {\n        this.router.navigate([\"/product/home\"]);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  //--------------JN ADD MAIN PHOTO STARTS--------//\n  getPhoto(data) {\n    return 'data:image/jpg;base64,' + data;\n  }\n  byteSize(base64String) {\n    return this.dataUtils.byteSize(base64String);\n  }\n  openFile(base64String, contentType) {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n  setFileData(event, field, isImage) {\n    this.dataUtils.loadFileToForm(event, this.formGroup, field, isImage).subscribe({\n      error: err => this.eventManager.broadcast('big error')\n    });\n  }\n  clearInputImage(field, fieldContentType, idInput) {\n    this.formGroup.patchValue({\n      [field]: null,\n      [fieldContentType]: null\n    });\n    if (idInput && this.elementRef.nativeElement.querySelector('#' + idInput)) {\n      this.elementRef.nativeElement.querySelector('#' + idInput).value = null;\n    }\n  }\n};\nEditComponent = __decorate([Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})], EditComponent);\nexport { EditComponent };","map":{"version":3,"mappings":"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","names":["Component","EditComponent","constructor","dataUtils","eventManager","fb","route","router","elementRef","productService","id","name","price","photo","photoContentType","description","tax","formGroup","group","ngOnInit","paramMap","subscribe","param","String","get","getById","data","productForm","console","log","patchValue","getPhoto","update","value","next","navigate","error","err","byteSize","base64String","openFile","contentType","setFileData","event","field","isImage","loadFileToForm","broadcast","clearInputImage","fieldContentType","idInput","nativeElement","querySelector","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/product/edit/edit.component.ts"],"sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from 'src/app/models/Product';\nimport { DataUtils, FileLoadError } from 'src/app/service/data-util.service';\nimport { EventManager } from 'src/app/service/event-manager.service';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\n\nexport class EditComponent implements OnInit {\n\n  formGroup!: FormGroup;\n \n  productForm: Product = {\n\n    id: '',\n    name: '',\n    price: 0,\n    photo: null,\n    photoContentType: '',\n    description: '',\n    tax: 0,\n\n  };\n\n  constructor(\n    protected dataUtils: DataUtils,\n    protected eventManager: EventManager,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    protected elementRef: ElementRef,\n    private productService: ProductService,\n  ) {\n\n    this.formGroup = this.fb.group({\n      id:'',\n      name: '',\n      price: 0,\n      photo: null,\n      photoContentType: null,\n      description: '',\n      tax: 17,\n\n    });\n\n    \n   \n\n  }\n\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((param) => {\n      var id = String(param.get('id'));\n      this.getById(id);\n    });\n  }\n\n  getById(id: string) {\n    this.productService.getById(id).subscribe((data) => {\n      this.productForm = data;\n      console.log( \"this.productForm\" , this.productForm);\n      \n      \n        this.formGroup.patchValue({\n        id: this.productForm.id,\n        name: this.productForm.name,\n        price: this.productForm.price,\n        photo:this.getPhoto(this.productForm.photo),\n        description: this.productForm.description,\n        tax:this.productForm.tax });\n    });\n   \n   \n  }\n\n\n\n  update() {\n    this.productService.update(this.formGroup.value)\n      .subscribe({\n        next: (data) => {\n          this.router.navigate([\"/product/home\"]);\n        },\n        error: (err) => {\n          console.log(err);\n        }\n      })\n  }\n\n  //--------------JN ADD MAIN PHOTO STARTS--------//\n\n\n \nprivate getPhoto(data: string): any {\n  return 'data:image/jpg;base64,' + data;\n}\n\n\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n\n\n\n  setFileData(event: Event, field: string, isImage: boolean): void {\n    this.dataUtils.loadFileToForm(event, this.formGroup, field, isImage).subscribe({\n      error: (err: FileLoadError) =>\n        this.eventManager.broadcast('big error'),\n    });\n  }\n\n  clearInputImage(field: string, fieldContentType: string, idInput: string): void {\n    this.formGroup.patchValue({\n      [field]: null,\n      [fieldContentType]: null,\n    });\n    if (idInput && this.elementRef.nativeElement.querySelector('#' + idInput)) {\n      this.elementRef.nativeElement.querySelector('#' + idInput).value = null;\n    }\n  }\n\n\n\n  //--------------JN ADD MAIN PHOTO ENDS--------//\n\n\n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}