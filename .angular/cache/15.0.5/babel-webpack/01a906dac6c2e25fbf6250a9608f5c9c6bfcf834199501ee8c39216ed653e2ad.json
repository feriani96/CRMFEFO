{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/client.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditComponent {\n  constructor(route, router, clientService) {\n    this.route = route;\n    this.router = router;\n    this.clientService = clientService;\n    this.clientForm = {\n      id: '',\n      name: '',\n      phone: 0,\n      address: '',\n      email: ''\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(param => {\n      var id = String(param.get('id'));\n      this.getById(id);\n    });\n  }\n  getById(id) {\n    this.clientService.getById(id).subscribe(data => {\n      this.clientForm = data;\n    });\n  }\n  update() {\n    this.clientService.update(this.clientForm).subscribe({\n      next: data => {\n        this.router.navigate([\"/client/home\"]);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ClientService));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"mb-3\"], [\"for\", \"txtName\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"txtName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtPrice\", 1, \"form-label\"], [\"type\", \"number\", \"name\", \"price\", \"id\", \"txtPrice\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"txtQuantity\", 1, \"form-label\"], [\"type\", \"number\", \"name\", \"quantity\", \"id\", \"txtQuantity\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"legend\");\n      i0.ɵɵtext(2, \"Edit Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.fruitForm.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.fruitForm.price = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.fruitForm.quantity = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function EditComponent_Template_button_click_16_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵtext(17, \"Update\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.fruitForm.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.fruitForm.price);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.fruitForm.quantity);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,aAAa;EASxBC,YACUC,KAAqB,EACrBC,MAAc,EACdC,aAA4B;IAF5B,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,kBAAa,GAAbC,aAAa;IAVvB,eAAU,GAAW;MACnBC,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;KACR;EAKG;EAEJC,QAAQ;IACN,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,SAAS,CAAEC,KAAK,IAAI;MACtC,IAAIR,EAAE,GAAGS,MAAM,CAACD,KAAK,CAACE,GAAG,CAAC,IAAI,CAAC,CAAC;MAChC,IAAI,CAACC,OAAO,CAACX,EAAE,CAAC;IAClB,CAAC,CAAC;EACJ;EAEAW,OAAO,CAACX,EAAU;IAChB,IAAI,CAACD,aAAa,CAACY,OAAO,CAACX,EAAE,CAAC,CAACO,SAAS,CAAEK,IAAI,IAAI;MAChD,IAAI,CAACC,UAAU,GAAGD,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAE,MAAM;IACJ,IAAI,CAACf,aAAa,CAACe,MAAM,CAAC,IAAI,CAACD,UAAU,CAAC,CACvCN,SAAS,CAAC;MACTQ,IAAI,EAAGH,IAAI,IAAI;QACb,IAAI,CAACd,MAAM,CAACkB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACxC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACN;;AAtCWvB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT1BC,8BAAuB;MACXA,yBAAS;MAAAA,iBAAS;MAC1BA,4BAAM;MAEsCA,oBAAI;MAAAA,iBAAQ;MACpDA,gCAAkG;MAAnEA;QAAA;MAAA,EAA8B;MAA7DA,iBAAkG;MAEpGA,8BAAkB;MACyBA,sBAAK;MAAAA,iBAAQ;MACtDA,iCAAuG;MAArEA;QAAA;MAAA,EAA+B;MAAjEA,iBAAuG;MAEzGA,+BAAkB;MAC4BA,yBAAQ;MAAAA,iBAAQ;MAC5DA,iCAAgH;MAA3EA;QAAA;MAAA,EAAkC;MAAvEA,iBAAgH;MAElHA,kCAAiE;MAA3CA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAAyBD,uBAAM;MAAAA,iBAAS;;;MAV/CA,eAA8B;MAA9BA,4CAA8B;MAI3BA,eAA+B;MAA/BA,6CAA+B;MAI5BA,eAAkC;MAAlCA,gDAAkC","names":["EditComponent","constructor","route","router","clientService","id","name","phone","address","email","ngOnInit","paramMap","subscribe","param","String","get","getById","data","clientForm","update","next","navigate","error","err","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/client/edit/edit.component.ts","/home/hp/Desktop/crm project/CRMFEFO/src/app/client/edit/edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Client } from 'src/app/models/Client';\nimport { ClientService } from 'src/app/service/client.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  clientForm: Client = {\n    id: '',\n    name: '',\n    phone: 0,\n    address: '',\n    email: '',\n  };\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private clientService: ClientService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((param) => {\n      var id = String(param.get('id'));\n      this.getById(id);\n    });\n  }\n\n  getById(id: string) {\n    this.clientService.getById(id).subscribe((data) => {\n      this.clientForm = data;\n    });\n  }\n\n  update() {\n    this.clientService.update(this.clientForm)\n      .subscribe({\n        next: (data) => {\n          this.router.navigate([\"/client/home\"]);\n        },\n        error: (err) => {\n          console.log(err);\n        }\n      })\n  }\n}\n\n\n","\n<div class=\"container\">\n    <legend>Edit Item</legend>\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"txtName\" class=\"form-label\">Name</label>\n        <input type=\"text\" name=\"name\" [(ngModel)] = \"fruitForm.name\" class=\"form-control\" id=\"txtName\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"txtPrice\" class=\"form-label\">Price</label>\n        <input type=\"number\" name=\"price\" [(ngModel)] = \"fruitForm.price\" class=\"form-control\" id=\"txtPrice\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"txtQuantity\" class=\"form-label\">Quantity</label>\n        <input type=\"number\" name=\"quantity\" [(ngModel)] = \"fruitForm.quantity\" class=\"form-control\" id=\"txtQuantity\" />\n      </div>\n      <button type=\"button\" (click)=\"update()\" class=\"btn btn-primary\">Update</button>\n    </form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}