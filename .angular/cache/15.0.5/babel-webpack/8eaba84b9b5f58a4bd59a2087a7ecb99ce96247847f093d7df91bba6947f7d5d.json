{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  getProducts() {\n    return this.http.get(\"http://localhost:8085/api/products\");\n  }\n  create(payload) {\n    return this.http.post('http://localhost:8080/api/products', payload);\n  }\n  getById(id) {\n    return this.http.get(`http://localhost:8080/api/products/${id}`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAEtCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,oCAAoC,CAAC;EACvE;EACAC,MAAM,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAU,oCAAoC,EAAED,OAAO,CAAC;EAC/E;EACAE,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAU,sCAAsCK,EAAE,EAAE,CAAC;EAC1E;;AAZQT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAU,SAAdV,cAAc;EAAAW,YAFb;AAAM","names":["ProductService","constructor","http","getProducts","get","create","payload","post","getById","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hp\\techWebAvancee\\CRMFEFO\\src\\app\\service\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Product, ProductDto } from '../models/Product';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n    getProducts(){\n      return this.http.get<Product[]>(\"http://localhost:8085/api/products\");\n    }\n    create(payload: Product) {\n      return this.http.post<Product>('http://localhost:8080/api/products', payload);\n    }\n    getById(id: number) {\n      return this.http.get<Product>(`http://localhost:8080/api/products/${id}`);\n     }\n  }\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}