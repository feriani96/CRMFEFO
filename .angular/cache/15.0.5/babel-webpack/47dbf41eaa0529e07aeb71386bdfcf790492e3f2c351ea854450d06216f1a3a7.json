{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/_services/token-storage.service\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterComponent_form_10_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_10_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email must be a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_10_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_form_10_div_20_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵtemplate(2, RegisterComponent_form_10_div_20_div_2_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_form_10_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" Signup failed!\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.errorMessage, \" \");\n  }\n}\nfunction RegisterComponent_form_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 11, 12);\n    i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_10_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const _r1 = i0.ɵɵreference(1);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r1.form.valid && ctx_r9.onSubmitRegister());\n    });\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵelement(3, \"i\", 14);\n    i0.ɵɵelementStart(4, \"span\", 15);\n    i0.ɵɵtext(5, \"Invoice App\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 16)(7, \"label\", 17);\n    i0.ɵɵtext(8, \"Username or email address \");\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"input\", 18, 19);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_10_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.formRegister.username = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 16)(14, \"label\", 20);\n    i0.ɵɵtext(15, \"Email Address \");\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"input\", 21, 22);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_10_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.formRegister.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(20, RegisterComponent_form_10_div_20_Template, 3, 2, \"div\", 23);\n    i0.ɵɵelementStart(21, \"div\", 16)(22, \"label\", 24);\n    i0.ɵɵtext(23, \"Password \");\n    i0.ɵɵelementStart(24, \"span\");\n    i0.ɵɵtext(25, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"input\", 25, 26);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_10_Template_input_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.formRegister.password = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"div\", 27)(29, \"button\", 28);\n    i0.ɵɵtext(30, \"Sign Up\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(31, RegisterComponent_form_10_div_31_Template, 4, 1, \"div\", 29);\n    i0.ɵɵelementStart(32, \"p\", 30);\n    i0.ɵɵtext(33, \"already have account \");\n    i0.ɵɵelementStart(34, \"a\", 31);\n    i0.ɵɵtext(35, \"login here\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(1);\n    const _r3 = i0.ɵɵreference(19);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.formRegister.username);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.formRegister.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors && _r1.submitted);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.formRegister.password);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", _r1.submitted && ctx_r0.isSignUpFailed);\n  }\n}\nexport class RegisterComponent {\n  constructor(router, authService, formBuilder, tokenStorage) {\n    this.router = router;\n    this.authService = authService;\n    this.formBuilder = formBuilder;\n    this.tokenStorage = tokenStorage;\n    this.formRegister = {\n      username: null,\n      email: null,\n      password: null\n    };\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    this.formRegister = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    if (this.tokenStorage.getToken()) {\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n  onSubmitRegister() {\n    const {\n      username,\n      email,\n      password\n    } = this.formRegister;\n    this.authService.register(username, email, password).subscribe({\n      next: data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.TokenStorageService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"vh-100\", 2, \"background-color\", \"#1d9d7f\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col\", \"col-xl-10\"], [1, \"card\", 2, \"border-radius\", \"1rem\"], [1, \"row\", \"g-0\"], [1, \"col-md-6\", \"col-lg-5\", \"d-none\", \"d-md-block\"], [\"src\", \"/assets/img/registration.jpg\", \"alt\", \"login form\", 1, \"img-fluid\", 2, \"border-radius\", \"1rem 0 0 1rem\"], [1, \"col-md-6\", \"col-lg-7\", \"d-flex\", \"align-items-center\"], [1, \"card-body\", \"p-4\", \"p-lg-5\", \"text-black\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"d-flex\", \"align-items-center\", \"mb-3\", \"pb-1\"], [1, \"fas\", \"fa-cubes\", \"fa-2x\", \"me-3\", 2, \"color\", \"#ff6219\"], [1, \"h1\", \"fw-bold\", \"mb-0\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"20\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"for\", \"email-id\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"class\", \"alert-danger\", 4, \"ngIf\"], [\"for\", \"userpass\"], [\"id\", \"userpass\", \"type\", \"password\", \"placeholder\", \"Enter password...\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"form-group\", \"pt-1\", \"mb-4\"], [1, \"btn\", \"btn-dark\", \"btn-lg\", \"btn-block\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"mb-5\", \"pb-lg-2\", 2, \"color\", \"#1d9d7f\"], [\"routerLink\", \"/login\", 2, \"color\", \"#1d9d7f\"], [1, \"alert-danger\"], [4, \"ngIf\"], [1, \"alert\", \"alert-warning\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵelement(7, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵtemplate(10, RegisterComponent_form_10_Template, 36, 5, \"form\", 10);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSuccessful);\n    }\n  },\n  dependencies: [i5.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.MaxLengthValidator, i3.EmailValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ctx_r9","RegisterComponent","constructor","router","authService","formBuilder","tokenStorage","username","email","password","ngOnInit","formRegister","group","required","getToken","roles","getUser","onSubmitRegister","register","subscribe","next","data","console","log","isSuccessful","isSignUpFailed","error","err","errorMessage","message","reloadPage","window","location","reload","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/auth/register/register.component.ts","/home/hp/Desktop/crm project/CRMFEFO/src/app/auth/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { TokenStorageService } from 'src/app/_services/token-storage.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  formRegister: any = {\n    username: null,\n    email: null,\n    password: null\n  };\n\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n\n\n  constructor(private router: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.formRegister = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n\n    });\n\n\n    if (this.tokenStorage.getToken()) {\n\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmitRegister(): void {\n    const { username, email, password } = this.formRegister;\n   \n    this.authService.register(username, email, password).subscribe({\n      next: (data: any) => {\n       \n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      error: (err: { error: { message: any; }; }) => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    });\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","<!----design start -->\n\n<section class=\"vh-100\" style=\"background-color: #1d9d7f;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col col-xl-10\">\n          <div class=\"card\" style=\"border-radius: 1rem;\">\n            <div class=\"row g-0\">\n              <div class=\"col-md-6 col-lg-5 d-none d-md-block\">\n                <img src=\"/assets/img/registration.jpg\"\n                  alt=\"login form\" class=\"img-fluid\" style=\"border-radius: 1rem 0 0 1rem;\" />\n              </div>\n              <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n                <div class=\"card-body p-4 p-lg-5 text-black\">\n  \n\n                  <form *ngIf=\"!isSuccessful\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmitRegister()\"\n                    #f=\"ngForm\" novalidate>\n  \n                    <div class=\"d-flex align-items-center mb-3 pb-1\">\n                      <i class=\"fas fa-cubes fa-2x me-3\" style=\"color: #ff6219;\"></i>\n                      <span class=\"h1 fw-bold mb-0\">Invoice App</span>\n                    </div>\n  \n                  \n                    <div class=\"form-outline mb-4\">\n                       <label for=\"username\">Username or email address <span>*</span></label>\n                        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"formRegister.username\"\n                        required minlength=\"3\" maxlength=\"20\" #username=\"ngModel\">\n                      </div>\n\n                    <div class=\"form-outline mb-4\">\n                      <label for=\"email-id\">Email Address <span>*</span></label>\n                      <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"formRegister.email\"\n                          required email #email=\"ngModel\">\n                    </div>\n                     <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\n                        <div *ngIf=\"email.errors['required']\">Email is required</div>\n                        <div *ngIf=\"email.errors['email']\">\n                            Email must be a valid email address\n                        </div>\n                    </div>\n  \n                    <div class=\"form-outline mb-4\">\n                      <label for=\"userpass\">Password <span>*</span></label>\n                      <input id=\"userpass\" type=\"password\" placeholder=\"Enter password...\" type=\"password\"\n                          class=\"form-control\" name=\"password\" [(ngModel)]=\"formRegister.password\" required\n                          minlength=\"3\" #password=\"ngModel\">\n                    </div>\n  \n\n                     <div class=\"form-group pt-1 mb-4\">\n                       <button class=\"btn btn-dark btn-lg btn-block\">Sign Up</button>\n                     </div>\n\n                    <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n                        Signup failed!<br />{{ errorMessage }}\n                    </div>\n                                    \n                    <p class=\"mb-5 pb-lg-2\" style=\"color: #1d9d7f;\" >already have account <a routerLink=\"/login\"\n                        style=\"color: #1d9d7f;\">login here</a></p>\n                  \n                  </form>\n  \n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n<!----design ends-->\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}