{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientService {\n  constructor(http) {\n    this.http = http;\n  }\n  get() {\n    return this.http.get('http://localhost:8080/api/clients');\n  }\n  create(payload) {\n    return this.http.post('http://localhost:8080/api/clients', payload);\n  }\n  getById(id) {\n    return this.http.get(`http://localhost:8080/api/clients/${id}`);\n  }\n  update(payload) {\n    return this.http.put(`http://localhost:8080/api/clients/${payload.id}`, payload);\n  }\n  delete(id) {\n    return this.http.delete(`http://localhost:8080/api/clients/${id}`);\n  }\n}\nClientService.ɵfac = function ClientService_Factory(t) {\n  return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n};\nClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientService,\n  factory: ClientService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAGxCC,GAAG;IACD,OAAO,IAAI,CAACD,IAAI,CAACC,GAAG,CAAW,mCAAmC,CAAC;EACrE;EAEAC,MAAM,CAACC,OAAe;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,mCAAmC,EAAED,OAAO,CAAC;EAC7E;EAEAE,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACN,IAAI,CAACC,GAAG,CAAS,qCAAqCK,EAAE,EAAE,CAAC;EACzE;EAGAC,MAAM,CAACJ,OAAc;IACnB,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAC,qCAAqCL,OAAO,CAACG,EAAE,EAAE,EAACH,OAAO,CAAC;EAChF;EAGDM,MAAM,CAACH,EAAU;IACf,OAAO,IAAI,CAACN,IAAI,CAACS,MAAM,CAAS,qCAAqCH,EAAE,EAAE,CAAC;EAC5E;;AAzBWR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAY,SAAbZ,aAAa;EAAAa,YAFZ;AAAM","names":["ClientService","constructor","http","get","create","payload","post","getById","id","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hp\\techWebAvancee\\CRM PROJECT\\CRMFEFO\\src\\app\\service\\client.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Client } from '../models/Client';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  get() {\r\n    return this.http.get<Client[]>('http://localhost:8080/api/clients');\r\n  }\r\n\r\n  create(payload: Client) {\r\n    return this.http.post<Client>('http://localhost:8080/api/clients', payload);\r\n  }\r\n\r\n  getById(id: string) {\r\n    return this.http.get<Client>(`http://localhost:8080/api/clients/${id}`);\r\n  }\r\n\r\n \r\n  update(payload:Client){\r\n    return this.http.put(`http://localhost:8080/api/clients/${payload.id}`,payload);\r\n   }\r\n\r\n\r\n  delete(id: string) {\r\n    return this.http.delete<Client>(`http://localhost:8080/api/clients/${id}`);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}