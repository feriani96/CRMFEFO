{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/_services/token-storage.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_form_10_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_10_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_10_div_23_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 3 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_10_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, LoginComponent_form_10_div_23_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, LoginComponent_form_10_div_23_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(22);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors[\"minlength\"]);\n  }\n}\nfunction LoginComponent_form_10_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" Login failed!\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.errorMessage2, \" \");\n  }\n}\nfunction LoginComponent_form_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 11, 12);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_10_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const _r1 = i0.ɵɵreference(1);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r1.form.valid && ctx_r9.onSubmitLogin());\n    });\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵelement(3, \"i\", 14);\n    i0.ɵɵelementStart(4, \"span\", 15);\n    i0.ɵɵtext(5, \"Invoice App\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"h5\", 16);\n    i0.ɵɵtext(7, \"Sign into your account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 17)(9, \"label\", 18);\n    i0.ɵɵtext(10, \"Username or email address \");\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"input\", 19, 20);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_10_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.formLogin.username = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(15, LoginComponent_form_10_div_15_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementStart(16, \"div\", 17)(17, \"label\", 22);\n    i0.ɵɵtext(18, \"Password \");\n    i0.ɵɵelementStart(19, \"span\");\n    i0.ɵɵtext(20, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"input\", 23, 24);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_10_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.formLogin.password = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(23, LoginComponent_form_10_div_23_Template, 3, 2, \"div\", 21);\n    i0.ɵɵelementStart(24, \"div\", 25)(25, \"button\", 26);\n    i0.ɵɵtext(26, \"Login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(27, LoginComponent_form_10_div_27_Template, 4, 1, \"div\", 27);\n    i0.ɵɵelementStart(28, \"a\", 28);\n    i0.ɵɵtext(29, \"Forgot password?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"p\", 29);\n    i0.ɵɵtext(31, \"Don't have an account? \");\n    i0.ɵɵelementStart(32, \"a\", 30);\n    i0.ɵɵtext(33, \"Register here\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"a\", 28);\n    i0.ɵɵtext(35, \"Terms of use.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"a\", 28);\n    i0.ɵɵtext(37, \"Privacy policy\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(1);\n    const _r2 = i0.ɵɵreference(14);\n    const _r4 = i0.ɵɵreference(22);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.formLogin.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors && _r1.submitted);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.formLogin.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors && _r1.submitted);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", _r1.submitted && ctx_r0.isLoginFailed);\n  }\n}\nexport class LoginComponent {\n  constructor(router, authService, formBuilder, tokenStorage) {\n    this.router = router;\n    this.authService = authService;\n    this.formBuilder = formBuilder;\n    this.tokenStorage = tokenStorage;\n    this.formLogin = {\n      username: null,\n      password: null\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.errorMessage2 = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    this.formLogin = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n  onSubmitLogin() {\n    const {\n      username,\n      password\n    } = this.formLogin;\n    console.log(\"test\");\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        console.log(\"data : \", data);\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        console.log(\"Roles : \", this.roles);\n        console.log(\"user : \", this.tokenStorage.getUser());\n        this.router.navigate(['product/home']);\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.TokenStorageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"vh-100\", 2, \"background-color\", \"#1d9d7f\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col\", \"col-xl-10\"], [1, \"card\", 2, \"border-radius\", \"1rem\"], [1, \"row\", \"g-0\"], [1, \"col-md-6\", \"col-lg-5\", \"d-none\", \"d-md-block\"], [\"src\", \"/assets/img/login.jpg\", \"alt\", \"login form\", 1, \"img-fluid\", 2, \"border-radius\", \"1rem 0 0 1rem\"], [1, \"col-md-6\", \"col-lg-7\", \"d-flex\", \"align-items-center\"], [1, \"card-body\", \"p-4\", \"p-lg-5\", \"text-black\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"d-flex\", \"align-items-center\", \"mb-3\", \"pb-1\"], [1, \"fas\", \"fa-cubes\", \"fa-2x\", \"me-3\", 2, \"color\", \"#ff6219\"], [1, \"h1\", \"fw-bold\", \"mb-0\"], [1, \"fw-normal\", \"mb-3\", \"pb-3\", 2, \"letter-spacing\", \"1px\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"for\", \"pass\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"form-group\", \"pt-1\", \"mb-4\"], [1, \"btn\", \"btn-dark\", \"btn-lg\", \"btn-block\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"href\", \"#!\", 1, \"small\", \"text-muted\"], [1, \"mb-5\", \"pb-lg-2\", 2, \"color\", \"#1d9d7f\"], [\"routerLink\", \"/register\", 2, \"color\", \"#1d9d7f\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"alert\", \"alert-warning\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵelement(7, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵtemplate(10, LoginComponent_form_10_Template, 38, 5, \"form\", 10);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i5.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ctx_r9","LoginComponent","constructor","router","authService","formBuilder","tokenStorage","username","password","ngOnInit","formLogin","group","required","getToken","isLoggedIn","roles","getUser","onSubmitLogin","console","log","login","subscribe","next","data","saveToken","accessToken","saveUser","isLoginFailed","navigate","error","err","errorMessage","message","reloadPage","window","location","reload","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/hp/Desktop/crm project/CRMFEFO/src/app/auth/login/login.component.ts","/home/hp/Desktop/crm project/CRMFEFO/src/app/auth/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { TokenStorageService } from 'src/app/_services/token-storage.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n\n  formLogin: any = {\n    username: null,\n    password: null\n  };\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  errorMessage2 = '';\n  roles: string[] = [];\n\n\n\n  constructor(private router: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n\n\n    this.formLogin = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n\n  onSubmitLogin(): void {\n    const { username, password } = this.formLogin;\n    console.log(\"test\");\n\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        console.log(\"data : \", data);\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n\n        console.log(\"Roles : \", this.roles);\n        console.log(\"user : \", this.tokenStorage.getUser());\n        this.router.navigate(['product/home']);\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","<!--------design start--------->\n<section class=\"vh-100\" style=\"background-color: #1d9d7f;\">\n  <div class=\"container py-5 h-100\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col col-xl-10\">\n        <div class=\"card\" style=\"border-radius: 1rem;\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-6 col-lg-5 d-none d-md-block\">\n              <img src=\"/assets/img/login.jpg\" alt=\"login form\" class=\"img-fluid\"\n                style=\"border-radius: 1rem 0 0 1rem;\" />\n            </div>\n            <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n              <div class=\"card-body p-4 p-lg-5 text-black\">\n\n                <form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmitLogin()\" #f=\"ngForm\"\n                  novalidate>\n\n                  <div class=\"d-flex align-items-center mb-3 pb-1\">\n                    <i class=\"fas fa-cubes fa-2x me-3\" style=\"color: #ff6219;\"></i>\n                    <span class=\"h1 fw-bold mb-0\">Invoice App</span>\n                  </div>\n\n                  <h5 class=\"fw-normal mb-3 pb-3\" style=\"letter-spacing: 1px;\">Sign into your account</h5>\n\n                  <div class=\"form-outline mb-4\">\n                    <label for=\"name\">Username or email address <span>*</span></label>\n                    <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"formLogin.username\" required\n                      #username=\"ngModel\">\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"username.errors && f.submitted\">\n                    Username is required!\n                  </div>\n\n                  <div class=\"form-outline mb-4\">\n                    <label for=\"pass\">Password <span>*</span></label>\n                    <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"formLogin.password\"\n                      required minlength=\"3\" #password=\"ngModel\">\n                  </div>\n\n                  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"password.errors && f.submitted\">\n                    <div *ngIf=\"password.errors['required']\">Password is required</div>\n                    <div *ngIf=\"password.errors['minlength']\">\n                      Password must be at least 3 characters\n                    </div>\n                  </div>\n\n\n\n                  <div class=\"form-group pt-1 mb-4\">\n                    <button class=\"btn btn-dark btn-lg btn-block\">Login</button>\n                  </div>\n\n                  <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isLoginFailed\">\n                    Login failed!<br />{{ errorMessage2 }}\n                  </div>\n\n                  <a class=\"small text-muted\" href=\"#!\">Forgot password?</a>\n                  <p class=\"mb-5 pb-lg-2\" style=\"color: #1d9d7f;\">Don't have an account? <a routerLink=\"/register\"\n                      style=\"color: #1d9d7f;\">Register here</a></p>\n                  <a href=\"#!\" class=\"small text-muted\">Terms of use.</a>\n                  <a href=\"#!\" class=\"small text-muted\">Privacy policy</a>\n                </form>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!--------design ends--------->\n<!--form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmitLogin()\" #f=\"ngForm\" novalidate>\n  <label for=\"name\">Username or email address <span>*</span></label>\n  <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"formLogin.username\" required #username=\"ngModel\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"username.errors && f.submitted\">\n    Username is required!\n  </div>\n  <label for=\"pass\">Password <span>*</span></label>\n  <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"formLogin.password\" required minlength=\"3\"\n    #password=\"ngModel\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"password.errors && f.submitted\">\n    <div *ngIf=\"password.errors['required']\">Password is required</div>\n    <div *ngIf=\"password.errors['minlength']\">\n      Password must be at least 3 characters\n    </div>\n  </div>\n    <div class=\"login-action mb-10 fix\">\n      <span class=\"log-rem f-left\">\n        <input id=\"remember\" type=\"checkbox\">\n        <label for=\"remember\">Remember me</label>\n      </span>\n      <span class=\"forgot-login f-right\">\n        <a href=\"#\">Lost your password?</a>\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <button class=\"tp-in-btn w-100\">Login</button>\n    </div>\n\n    <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isLoginFailed\">\n      Login failed!<br />{{ errorMessage2 }}\n  </div>\n</form-->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}